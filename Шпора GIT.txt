ls -1   -  Показ всех файлов в папке 
rm - удаление файла
cat ~/.gitconfig   -  вывод моей личной инфо 
cat + путь к файлу   -   вывод содержимого файла 
git cat-file -p +хеш комита  - выводит состояние комита
git init   -   создание пустого репозитория
git status   -  проверка статуса репозитория
git add .   -   индексация всех файлов в текущей папке
git add + путь к файлу    -   индексация одного или нескольких определенных файлов 
git commit -m "-описание комита-"    -   комит файлов которые находятся в индексации
git commit -a -m "-описание комита-" 
git log    -   показывает историю комитов
git log -1   -  показывает последний комит 
git log --oneline   -  вывод по одной строке комита
git log --oneline --all   -  смотрим все комиты независимо от стадии отката
git show + хеш комита     -   покажет изменения во время этого комита 
git diff    -  показать изменения незаиндексированых файлов
git diff --staged    -  показать изменения заиндексированых файлов
git checkout -b +название указателя + хеш комита    -   создает указатель на комит и откатывается на него (если после этого создать новый комит получится ветка)
git checkout -b +название указателя  -  создает новую ветку с текущего комита 
git checkout + путь к файлу    -   откат незакомиченого файла и возрат файла если он был удален 
git checkout + хеш комита   -   откат всего проекта до определенного комита
git checkout + хеш комита + путь к файлу   -  откат файла до определенного комита(состояния файла) 
git reset HEAD + путь к файлу  -  отмена индексации файла
git reset --soft HEAD^1    -   удаление предыдущего комита( измененные файлы выпадают в индексацию)
git commit --amend -m "-описание комита-"    -  изменение описания последнего комита 
git rm +путь к файлу   -  удаление одного из файлов который попал в предыдущий комит (файл полностью удаляется)
git rm --cached +путь к файлу  - удаление одного из файлов который попал в предыдущий комит (файл остается)
git commit --amend --no-edit - изменяет предыдущий комит ( сначала сделать удаление файла)
git merge + указатель ветки которая будет сливаться с текущей веткой -m + комит меседж
git remote -v   -  вывод рипозиториев
git remote add +название для репозитория +ssh    -    создание нового репозитория от удаленного
git branch -m название    -   переиминовует локальную ветку на которой вы находитесь
git push origin master    -   пуш файлов на ГитХаб, вместо master может быть любое другое название ветки
git push origin старая ветка которая уже есть в гите:новая ветка     -    создает новую ветку на основе старой
git push origin :удаленная(старая) ветка    -   удаляет ветку в гитхабе
git pull origin master   -   получение файлов с ГитХаба  с векти мастер(главной ветки) ,что бы получить ветку нужно быть в ней 

git fetch origin   -  получает все изминения репозитория 
git branch --set-upstream-to=origin/название ветки   -   соединяет локальную и удаленную ветки 
git branch -vv   -   посмотреть связи локальных и удаленных веток





var wForm = document.querySelector(".main_form");
var secondName = document.querySelector("[name=secondname]");
var tname = document.querySelector("[name=tname]");
var lastName = document.querySelector("[name=lastname]");

wForm.addEventListener("submit", function(evt)
{
    if( !secondName.value || !tname.value || !lastName.value)
    {
        evt.preventDefault();
        if(!secondName.value){alert("Заполните фамилию");}
        if(!tname.value){alert("Заполните имя");}
        if(!lastName.value){alert("Заполните отчество");}
    }
});https://echo.htmlacademy.ru